name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

# Environment variables available to all jobs and steps in this workflow
env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GKE_CLUSTER: deployment-cluster-sdk
  GKE_NAMESPACE: demo-application
  GKE_ZONE: asia-southeast1-a



jobs:
  setup-build-deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 19
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 19
      - run: mvn clean install --batch-mode --errors --fail-at-end
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: GKE-deployment-0.0.1-SNAPSHOT.jar
          path: target/
  build-docker-image:
    name: build-docker
    needs: setup-build-deploy
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Retrieve saved jar
        uses: actions/download-artifact@v2
        with:
          name: GKE-deployment-0.0.1-SNAPSHOT.jar
          path: target/
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: 'Use gcloud CLI'
        run: |
          gcloud auth configure-docker
      # Build the Docker image
      - name: Build
        run: |
          docker build -t gke-deployment-ci-cd .
      # Tag the Docker image
      - name: Tag
        run: |
          docker tag gke-deployment-ci-cd gcr.io/$PROJECT_ID/gke-deployment-ci-cd

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |
          docker push gcr.io/my-kubernetes-project-389604/gke-deployment-ci-cd
            # Push the Docker image to Google Container Registry

  deploy-to-gke:
    needs: build-docker-image
    runs-on: ubuntu-latest
    steps:
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: 'Use gcloud CLI'
        run: |
          gcloud config set container/cluster $GKE_CLUSTER
      - name: 'run deployment'
        run: |
          kubectl run gke-deployment-ci-cd --image=gcr.io/$PROJECT_ID/gke-deployment-ci-cd --port 8080
      - name: 'create deployment'
        run: |
          kubectl create deployment gke-deployment-ci-cd --image=gcr.io/$PROJECT_ID/gke-deployment-ci-cd --port 8080        

      - name: 'expose deployment'
        run: |
          kubectl expose deployment gke-deployment-ci-cd --type=LoadBalancer --port 80 --target-port 8080
          

#        - name: 'Set up Cloud SDK'
#        - uses: 'google-github-actions/auth@v1'
#        - name: kubectl - Google Cloud GKE cluster.
#          uses: 'google-github-actions/setup-gcloud@v1'
#        env:
#            PROJECT_ID: ${{ env.PROJECT_ID }}
#            APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
#            CLUSTER_NAME: ${{ env.GKE_CLUSTER }}
#            ZONE_NAME: ${{ env.GKE_ZONE }}
#        with:
#            args: apply -f k8s/
#    needs: build-docker-image
#
#    runs-on: ubuntu-latest
#    steps:
#      - id: 'auth'
#        uses: 'google-github-actions/auth@v1'
#        with:
#          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'
#
#      - name: 'Set up Cloud SDK'
#        uses: 'google-github-actions/setup-gcloud@v1'
#
#      - name: 'Set up Cloud SDK'
#        uses: 'google-github-actions/setup-gcloud@v1'
#
#      - name: 'Use gcloud CLI'
#        run: |
#          gcloud config set project $PROJECT_ID
#          gcloud config set compute/zone asia-southeast1-a
#          gcloud container clusters get-credentials $GKE_CLUSTER
#      - name: 'Apply Kubernetes Deployment'
#        run: |
#          echo "apiVersion: apps/v1
#          kind: Deployment
#          metadata:
#            name: gke-deployment-ci-cd
#            labels:
#              app: gke-deployment-ci-cd
#          spec:
#            replicas: 3
#            selector:
#              matchLabels:
#                app: gke-deployment-ci-cd
#            template:
#              metadata:
#               labels:
#                 app: gke-deployment-ci-cd
#              spec:
#                containers:
#                  - name: gke-deployment-ci-cd
#                   image: gcr.io/$PROJECT_ID/gke-deployment-ci-cd
#                   ports:
#                     - containerPort: 8080" | kubectl apply -f -